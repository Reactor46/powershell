#Generated Form Function
function GenerateForm {
########################################################################
# Code Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.10.0
# Generated On: 16/08/2013 20:47
# Generated By: w7
########################################################################

#region ***** Import the Assemblies *****
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null;
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null;
#endregion

#region ***** Generated Form Objects *****
$form1 = New-Object -TypeName System.Windows.Forms.Form;
$viewfile = New-Object -TypeName System.Windows.Forms.Button;
$filelist = New-Object -TypeName System.Windows.Forms.Button;
$quit = New-Object -TypeName System.Windows.Forms.Button;
$listBox1 = New-Object -TypeName System.Windows.Forms.ListBox;
$comboBox1 = New-Object -TypeName System.Windows.Forms.ComboBox;
$InitialFormWindowState = New-Object -TypeName System.Windows.Forms.FormWindowState;
#endregion Generated Form Objects

#region ***** Setup variables *****
$myfont = New-Object System.Drawing.Font("Microsoft Sans Serif",9.75,0,3,0);
$ComputerNames = @("server1","server2","server3","server4","server5");
$editor = "C:\windows\notepad.exe";
Set-Variable -Name $ComputerNames -Option ReadOnly;
Set-Variable -Name $editor -Option ReadOnly;

$fileobj = New-Object -TypeName PSObject;
Add-Member -InputObject $fileobj -MemberType NoteProperty -Name ShortPath -Value "";
Add-Member -InputObject $fileobj -MemberType NoteProperty -Name Filename -Value "";
Add-Member -InputObject $fileobj -MemberType NoteProperty -Name FullPath -Value "";

# Details of the alert log(s) that we're looking for.
$searchinfo = New-Object -TypeName PSObject;
Add-Member -InputObject $searchinfo -MemberType NoteProperty -Name Path -Value "C:\Family";
Add-Member -InputObject $searchinfo -MemberType NoteProperty -Name Filter -Value "*.txt";
Set-Variable -Name $searchinfo -Option ReadOnly;
#endregion ***** Setup variables *****

#----------------------------------------------
#Generated Event Script Blocks
#----------------------------------------------

# Button to obtain the list of files from the directory
# and populate the listbox.
$filelist_OnClick=
{
   #TODO: Place custom script here

   # With this we can form the file path to either node1 or node2.
   $cBoxChoice = $comboBox1.SelectedItem.ToString();
   Write-Host "cBoxChoice, you are now $cBoxChoice";
      ls -Path $searchinfo.Path -Filter $searchinfo.Filter | Sort-Object CreationTime |
       ForEach-Object {
         $listBox1.Items.Add($_.Name);
         $fileobj.ShortPath = $_.DirectoryName;
       }
   $viewfile.Enabled = $true;
   $filelist.Enabled = $false;
}

# Button to quit the application.
$quit_OnClick=
{
   #TODO: Place custom script here
   $form1.Dispose();
   $form1.Close();
}

# Button to view the file as selected from the listbox.
$viewfile_OnClick=
{
   #TODO: Place custom script here
   Write-Host "the viewfile onclick bit";
   # Get the filename as selected in the ListBox.
   $fileobj.FileName = $listBox1.SelectedItem.ToString();
   # Combine (join) the short path with the filename to form the absolute
   # fullpath of the file.
   $fileobj.FullPath = [System.IO.Path]::Combine($fileobj.ShortPath,$fileobj.FileName);
   Out-String -InputObject $fileobj;

   # View the file just selected with MS Windows Notepad.
   & $editor $fileobj.FullPath;
}

$OnLoadForm_StateCorrection=
{#Correct the initial state of the form to prevent the .Net maximized form issue
  $form1.WindowState = $InitialFormWindowState;
}

#----------------------------------------------
#End of Generated Event Script Blocks
#----------------------------------------------

#region Generated Form Code
$System_Drawing_Size = New-Object System.Drawing.Size;
$System_Drawing_Size.Height = 262;
$System_Drawing_Size.Width = 284;
$form1.ClientSize = $System_Drawing_Size;
$form1.DataBindings.DefaultDataSourceUpdateMode = 0;
$form1.Name = "form1";
$form1.Text = "Alert Logs";
$form1.StartPosition = "CenterScreen";


$viewfile.DataBindings.DefaultDataSourceUpdateMode = 0;

$System_Drawing_Point = New-Object System.Drawing.Point;
$System_Drawing_Point.X = 174;
$System_Drawing_Point.Y = 190;
$viewfile.Location = $System_Drawing_Point;
$viewfile.Name = "viewfile";
$System_Drawing_Size = New-Object System.Drawing.Size;
$System_Drawing_Size.Height = 23;
$System_Drawing_Size.Width = 75;
$viewfile.Size = $System_Drawing_Size;
$viewfile.TabIndex = 4;
$viewfile.Text = "View File";
$viewfile.UseVisualStyleBackColor = $True;
$viewfile.add_Click($viewfile_OnClick);
$viewfile.Enabled = $false;
$form1.Controls.Add($viewfile);


$filelist.DataBindings.DefaultDataSourceUpdateMode = 0;

$System_Drawing_Point = New-Object System.Drawing.Point;
$System_Drawing_Point.X = 93;
$System_Drawing_Point.Y = 190;
$filelist.Location = $System_Drawing_Point;
$filelist.Name = "filelist";
$System_Drawing_Size = New-Object System.Drawing.Size;
$System_Drawing_Size.Height = 23;
$System_Drawing_Size.Width = 75;
$filelist.Size = $System_Drawing_Size;
$filelist.TabIndex = 3;
$filelist.Text = "List Files";
$filelist.UseVisualStyleBackColor = $True;
$filelist.add_Click($filelist_OnClick);

$form1.Controls.Add($filelist);

$quit.DataBindings.DefaultDataSourceUpdateMode = 0;

$System_Drawing_Point = New-Object System.Drawing.Point;
$System_Drawing_Point.X = 12;
$System_Drawing_Point.Y = 190;
$quit.Location = $System_Drawing_Point;
$quit.Name = "quit";
$System_Drawing_Size = New-Object System.Drawing.Size;
$System_Drawing_Size.Height = 23;
$System_Drawing_Size.Width = 75;
$quit.Size = $System_Drawing_Size;
$quit.TabIndex = 2;
$quit.Text = "Quit";
$quit.UseVisualStyleBackColor = $True;
$quit.add_Click($quit_OnClick);

$form1.Controls.Add($quit);

$listBox1.DataBindings.DefaultDataSourceUpdateMode = 0;
$listBox1.FormattingEnabled = $True;
$System_Drawing_Point = New-Object System.Drawing.Point;
$System_Drawing_Point.X = 29;
$System_Drawing_Point.Y = 60;
$listBox1.Location = $System_Drawing_Point;
$listBox1.Name = "listBox1";
$System_Drawing_Size = New-Object System.Drawing.Size;
$System_Drawing_Size.Height = 95;
$System_Drawing_Size.Width = 217;
$listBox1.Size = $System_Drawing_Size;
$listBox1.TabIndex = 1;
$listBox1.Font = $myfont;

$form1.Controls.Add($listBox1);

$comboBox1.DataBindings.DefaultDataSourceUpdateMode = 0;
$comboBox1.FormattingEnabled = $True;
$System_Drawing_Point = New-Object System.Drawing.Point;
$System_Drawing_Point.X = 82;
$System_Drawing_Point.Y = 13;
$comboBox1.Location = $System_Drawing_Point;
$comboBox1.Name = "comboBox1";
$System_Drawing_Size = New-Object System.Drawing.Size;
$System_Drawing_Size.Height = 21;
$System_Drawing_Size.Width = 121;
$comboBox1.Size = $System_Drawing_Size;
$comboBox1.TabIndex = 0;
foreach ($computer in $ComputerNames)
{
  $aa = $comboBox1.Items.Add($computer);
}
# Set ComboBox to the first item in the list.
$comboBox1.SelectedIndex = 0;

$form1.Controls.Add($comboBox1);

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState;
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection);
#Show the Form
$form1.ShowDialog() | Out-Null;

} #End Function

#Call the Function
GenerateForm;
18/08/2013 01:10:22
this is an added line
